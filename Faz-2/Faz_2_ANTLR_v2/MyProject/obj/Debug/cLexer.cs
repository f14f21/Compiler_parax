//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Asp.net\Compiler_parax\Faz-2\Faz_2_ANTLR_v2\MyProject\c.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace MyProject {

	using System;
	using System.Collections;

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class cLexer : Lexer {
	public const int
		T__6=1, T__5=2, T__4=3, T__3=4, T__2=5, T__1=6, T__0=7, ID=8, INT=9, NEWLINE=10, 
		WS=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'"
	};
	public static readonly string[] ruleNames = {
		"T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "ID", "INT", "NEWLINE", 
		"WS"
	};


		Hashtable symbolTable=new Hashtable();
		Hashtable symbolTable2=new Hashtable();


	public cLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "c.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 10 : WS_action(_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: Skip(); break;
		}
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r@\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t"+
		"\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3"+
		"\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x6\t)\n\t\r\t\xE\t*\x3"+
		"\n\x6\n.\n\n\r\n\xE\n/\x3\v\x5\v\x33\n\v\x3\v\x5\v\x36\n\v\x3\v\x3\v\x3"+
		"\f\x6\f;\n\f\r\f\xE\f<\x3\f\x3\f\x2\x2\x2\r\x3\x2\x3\x5\x2\x4\a\x2\x5"+
		"\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x3"+
		"\x2\x4\x4\x2\x43\\\x63|\x5\x2\v\f\xF\xF\"\"\x44\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x3\x19\x3\x2\x2\x2\x5\x1B\x3\x2\x2\x2"+
		"\a\x1D\x3\x2\x2\x2\t\x1F\x3\x2\x2\x2\v!\x3\x2\x2\x2\r#\x3\x2\x2\x2\xF"+
		"%\x3\x2\x2\x2\x11(\x3\x2\x2\x2\x13-\x3\x2\x2\x2\x15\x32\x3\x2\x2\x2\x17"+
		":\x3\x2\x2\x2\x19\x1A\a+\x2\x2\x1A\x4\x3\x2\x2\x2\x1B\x1C\a-\x2\x2\x1C"+
		"\x6\x3\x2\x2\x2\x1D\x1E\a/\x2\x2\x1E\b\x3\x2\x2\x2\x1F \a,\x2\x2 \n\x3"+
		"\x2\x2\x2!\"\a*\x2\x2\"\f\x3\x2\x2\x2#$\a\x31\x2\x2$\xE\x3\x2\x2\x2%&"+
		"\a?\x2\x2&\x10\x3\x2\x2\x2\')\t\x2\x2\x2(\'\x3\x2\x2\x2)*\x3\x2\x2\x2"+
		"*(\x3\x2\x2\x2*+\x3\x2\x2\x2+\x12\x3\x2\x2\x2,.\x4\x32;\x2-,\x3\x2\x2"+
		"\x2./\x3\x2\x2\x2/-\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30\x14\x3\x2\x2\x2\x31"+
		"\x33\a\xF\x2\x2\x32\x31\x3\x2\x2\x2\x32\x33\x3\x2\x2\x2\x33\x35\x3\x2"+
		"\x2\x2\x34\x36\a\f\x2\x2\x35\x34\x3\x2\x2\x2\x35\x36\x3\x2\x2\x2\x36\x37"+
		"\x3\x2\x2\x2\x37\x38\a=\x2\x2\x38\x16\x3\x2\x2\x2\x39;\t\x3\x2\x2:\x39"+
		"\x3\x2\x2\x2;<\x3\x2\x2\x2<:\x3\x2\x2\x2<=\x3\x2\x2\x2=>\x3\x2\x2\x2>"+
		"?\b\f\x2\x2?\x18\x3\x2\x2\x2\b\x2*/\x32\x35<\x3\x3\f\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace MyProject
